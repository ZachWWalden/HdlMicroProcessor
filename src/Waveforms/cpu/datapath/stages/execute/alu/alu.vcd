$date
	Tue Apr 12 23:38:31 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu $end
$var wire 3 ! alu_flags [2:0] $end
$var wire 2 " alu_operation [1:0] $end
$var wire 1 # alu_operation_select $end
$var wire 16 $ alu_out [15:0] $end
$var wire 8 % bottom_operand [7:0] $end
$var wire 1 & clock $end
$var wire 4 ' fu_oe [3:0] $end
$var wire 1 ( nreset $end
$var wire 8 ) top_operand [7:0] $end
$scope module add_unit $end
$var wire 1 # add_sub $end
$var wire 1 & clock $end
$var wire 3 * flags [2:0] $end
$var wire 1 ( nreset $end
$var wire 1 + oe $end
$var wire 8 , primary_operand [7:0] $end
$var wire 8 - secondary_operand [7:0] $end
$var wire 8 . result [7:0] $end
$var wire 3 / flag_result [2:0] $end
$var reg 9 0 value [8:0] $end
$upscope $end
$scope module bitwise $end
$var wire 1 # and_or $end
$var wire 1 & clock $end
$var wire 3 1 flags [2:0] $end
$var wire 1 ( nreset $end
$var wire 1 2 oe $end
$var wire 8 3 primary_operand [7:0] $end
$var wire 8 4 secondary_operand [7:0] $end
$var wire 8 5 result [7:0] $end
$var wire 3 6 flags_result [2:0] $end
$var reg 8 7 value [7:0] $end
$upscope $end
$scope module multiply_unit $end
$var wire 1 & clock $end
$var wire 3 8 flags [2:0] $end
$var wire 16 9 mult_out [15:0] $end
$var wire 1 ( nreset $end
$var wire 1 : oe $end
$var wire 8 ; primary_operand [7:0] $end
$var wire 8 < secondary_operand [7:0] $end
$var wire 3 = flags_result [2:0] $end
$var reg 16 > result [15:0] $end
$upscope $end
$scope module shifter $end
$var wire 1 & clock $end
$var wire 3 ? flags [2:0] $end
$var wire 1 ( nreset $end
$var wire 1 @ oe $end
$var wire 8 A primary_operand [7:0] $end
$var wire 1 # right_left $end
$var wire 8 B result [7:0] $end
$var wire 3 C flags_value [2:0] $end
$var reg 8 D value [7:0] $end
$var integer 32 E Index [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx E
b0 D
bx01 C
bx B
bz A
x@
bx ?
bx >
b0xx =
bz <
bz ;
x:
bx 9
bx 8
bx 7
b0xx 6
bx 5
bz 4
bz 3
x2
bx 1
b0 0
b1 /
bx .
bz -
bz ,
x+
bx *
bz )
1(
bx '
1&
bz %
bx $
z#
bz "
bx !
$end
#5000
b1 !
b1 *
b1 1
b1 8
b1 ?
b0 .
1+
b0 $
b0 9
bz 5
bz B
0:
02
0@
b1 '
b101 C
b0 "
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
b1 %
b1 -
b1 4
b1 <
1#
0&
#10000
b101 !
b101 *
b101 1
b101 8
b101 ?
b0 6
b100 C
b0 =
b101 /
b1 7
b110 E
b1111111 D
b11111111 >
b100000000 0
1&
#15000
b0 C
b1111110 )
b1111110 ,
b1111110 3
b1111110 ;
b1111110 A
0&
#20000
b0 !
b0 *
b0 1
b0 8
b0 ?
b1111111 $
b1111111 9
b1111111 .
b0 /
b1 6
b1111111 0
b1111110 >
b110 E
b1111111 D
b0 7
1&
#25000
b100 C
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
b0 %
b0 -
b0 4
b0 <
0&
#30000
b10 !
b10 *
b10 1
b10 8
b10 ?
b10 /
b11111111 $
b11111111 9
b11111111 .
b1 =
b110 E
b1111111 D
b0 >
b11111111 0
1&
#35000
b11111111 %
b11111111 -
b11111111 4
b11111111 <
0&
#40000
b110 !
b110 *
b110 1
b110 8
b110 ?
b11111110 $
b11111110 9
b11111110 .
b110 /
b10 =
b10 6
b111111110 0
b1111111000000001 >
b110 E
b1111111 D
b11111111 7
1&
#45000
b0 C
0#
b1 )
b1 ,
b1 3
b1 ;
b1 A
b1 %
b1 -
b1 4
b1 <
0&
#50000
b0 6
b0 =
b1 !
b1 *
b1 1
b1 8
b1 ?
b0 $
b0 9
b0 .
b1 /
b1 7
b0 E
b10 D
b1 >
b0 0
1&
#55000
b1010 )
b1010 ,
b1010 3
b1010 ;
b1010 A
0&
#60000
b0 !
b0 *
b0 1
b0 8
b0 ?
b0 /
b1001 $
b1001 9
b1001 .
b1001 0
b1010 >
b0 E
b10100 D
b1011 7
1&
#65000
b1 )
b1 ,
b1 3
b1 ;
b1 A
b11111111 %
b11111111 -
b11111111 4
b11111111 <
0&
#70000
b10 6
b100 !
b100 *
b100 1
b100 8
b100 ?
b10 $
b10 9
b10 .
b100 /
b11111111 7
b0 E
b10 D
b11111111 >
b100000010 0
1&
#75000
b1111111 )
b1111111 ,
b1111111 3
b1111111 ;
b1111111 A
b10001111 %
b10001111 -
b10001111 4
b10001111 <
0&
#80000
b110 !
b110 *
b110 1
b110 8
b110 ?
b110 /
b11110000 $
b11110000 9
b11110000 .
b10 C
b111110000 0
b100011011110001 >
b0 E
b11111110 D
1&
#85000
b11111111 %
b11111111 -
b11111111 4
b11111111 <
0&
#90000
b10000000 $
b10000000 9
b10000000 .
b0 E
b11111110 D
b111111010000001 >
b110000000 0
1&
#95000
0&
#100000
b0 E
b11111110 D
1&
#105000
bz .
0+
b0 !
b0 *
b0 1
b0 8
b0 ?
b111111010000001 $
b111111010000001 9
1:
b10 '
b110 C
b10 "
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
0&
#110000
b10 !
b10 *
b10 1
b10 8
b10 ?
b10 =
b1111111000000001 $
b1111111000000001 9
b1 /
b0 E
b11111110 D
b1111111000000001 >
b0 0
1&
#115000
b10 C
b1 )
b1 ,
b1 3
b1 ;
b1 A
0&
#120000
b0 !
b0 *
b0 1
b0 8
b0 ?
b0 =
b0 C
b100 /
b11111111 $
b11111111 9
b100000010 0
b11111111 >
b0 E
b10 D
1&
#125000
b100 C
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
b0 %
b0 -
b0 4
b0 <
0&
#130000
b110 C
b1 !
b1 *
b1 1
b1 8
b1 ?
b1 =
b0 $
b0 9
b10 /
b0 E
b11111110 D
b0 >
b11111111 0
1&
#135000
b10 C
b1111 )
b1111 ,
b1111 3
b1111 ;
b1111 A
b1111 %
b1111 -
b1111 4
b1111 <
0&
#140000
b1 /
b0 !
b0 *
b0 1
b0 8
b0 ?
b0 C
b0 6
b0 =
b11100001 $
b11100001 9
b0 0
b11100001 >
b0 E
b11110 D
b1111 7
1&
#145000
b11110 $
b11110 9
b11110 B
b100 !
b100 *
b100 1
b100 8
b100 ?
0:
1@
b100 '
b100 C
b1 "
1#
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
0&
#150000
b1111111 $
b1111111 9
b1111111 B
b100 /
b110 E
b1111111 D
b111011110001 >
b100001110 0
1&
#155000
b0 !
b0 *
b0 1
b0 8
b0 ?
b0 C
b11111110 )
b11111110 ,
b11111110 3
b11111110 ;
b11111110 A
0&
#160000
b100001101 0
b111011100010 >
b110 E
b1111111 D
b1110 7
1&
#165000
b100 !
b100 *
b100 1
b100 8
b100 ?
b100 C
b1 )
b1 ,
b1 3
b1 ;
b1 A
0&
#170000
b101 !
b101 *
b101 1
b101 8
b101 ?
b101 C
b0 $
b0 9
b0 B
b0 /
b1 7
b110 E
b0 D
b1111 >
b10000 0
1&
#175000
b1 !
b1 *
b1 1
b1 8
b1 ?
b1 C
b0 )
b0 ,
b0 3
b0 ;
b0 A
0&
#180000
b1 =
b1 6
b1111 0
b0 >
b110 E
b0 7
1&
#185000
b101 !
b101 *
b101 1
b101 8
b101 ?
b101 C
0#
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
0&
#190000
b110 !
b110 *
b110 1
b110 8
b110 ?
b10 /
b10 6
b110 C
b11111110 $
b11111110 9
b11111110 B
b0 =
b11111111 7
b0 E
b11111110 D
b111011110001 >
b11110000 0
1&
#195000
b10 !
b10 *
b10 1
b10 8
b10 ?
b10 C
b1111111 )
b1111111 ,
b1111111 3
b1111111 ;
b1111111 A
0&
#200000
b0 /
b0 6
b1110000 0
b11101110001 >
b0 E
b11111110 D
b1111111 7
1&
#205000
b110 !
b110 *
b110 1
b110 8
b110 ?
b110 C
b10000000 )
b10000000 ,
b10000000 3
b10000000 ;
b10000000 A
0&
#210000
b10 6
b101 !
b101 *
b101 1
b101 8
b101 ?
b101 C
b0 $
b0 9
b0 B
b10001111 7
b0 E
b0 D
b11110000000 >
b1110001 0
1&
#215000
b1 !
b1 *
b1 1
b1 8
b1 ?
b1 C
b0 )
b0 ,
b0 3
b0 ;
b0 A
0&
#220000
b0 6
b110 /
b1 =
b111110001 0
b0 >
b0 E
b1111 7
1&
#225000
bz B
b1111 $
b1111 9
b1111 5
0@
12
b1000 '
b0 !
b0 *
b0 1
b0 8
b0 ?
b101 C
b11 "
1#
b11111111 )
b11111111 ,
b11111111 3
b11111111 ;
b11111111 A
0&
#230000
b100 /
b100 C
b0 =
b110 E
b1111111 D
b111011110001 >
b100001110 0
1&
#235000
b11110000 %
b11110000 -
b11110000 4
b11110000 <
0&
#240000
b10 !
b10 *
b10 1
b10 8
b10 ?
b110 /
b10 =
b10 6
b11110000 $
b11110000 9
b11110000 5
b111101111 0
b1110111100010000 >
b110 E
b1111111 D
b11110000 7
1&
#245000
b0 %
b0 -
b0 4
b0 <
0&
#250000
b1 !
b1 *
b1 1
b1 8
b1 ?
b1 6
b0 $
b0 9
b0 5
b1 =
b10 /
b0 7
b110 E
b1111111 D
b0 >
b11111111 0
1&
#255000
b100 C
0#
b11110000 )
b11110000 ,
b11110000 3
b11110000 ;
b11110000 A
b1111 %
b1111 -
b1111 4
b1111 <
0&
#260000
b110 C
b10 !
b10 *
b10 1
b10 8
b10 ?
b0 =
b10 6
b11111111 $
b11111111 9
b11111111 5
b11100001 0
b111000010000 >
b0 E
b11100000 D
b11111111 7
1&
#265000
b10 C
b0 )
b0 ,
b0 3
b0 ;
b0 A
b0 %
b0 -
b0 4
b0 <
0&
#270000
b1 !
b1 *
b1 1
b1 8
b1 ?
b1 /
b1 6
b0 $
b0 9
b0 5
b1 C
b1 =
b0 7
b0 E
b0 D
b0 >
b0 0
1&
#275000
b101010 )
b101010 ,
b101010 3
b101010 ;
b101010 A
b1010101 %
b1010101 -
b1010101 4
b1010101 <
0&
#280000
b0 !
b0 *
b0 1
b0 8
b0 ?
b110 /
b0 =
b0 C
b0 6
b1111111 $
b1111111 9
b1111111 5
b111010101 0
b110111110010 >
b0 E
b1010100 D
b1111111 7
1&
#285000
0&
#285001
