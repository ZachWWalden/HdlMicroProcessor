;Reset Vector
	JMP INIT
;V - Blank Interupt
	JMP HANDLE_VBLANK
;Illegal Opcode Exception Handler
	JMP MAIN
:INIT
	;Initialize The Stack Pointer
	LDI R0 0xFF
	OUT SPH R0
	OUT SPL R0
	;Initialize The Call Stack Pointer
	LDI R0 0x00
	OUT CSP R0
	;Initialize Row offset zero
	LDI R31 0x00
	;Set Flag to say that we are in the 1st phase of the animation.
	MOVR R30 R31
	;Enable V-Blank Initerrupt
	LDI R0 0x01
	OUT GICR R0
	;Enable Global Initerrupts
	LDI R0 0x01
	OUT ICCR R0
:MAIN
	JMP MAIN

:HANDLE_VBLANK
	;Read from Program Memory. Write 0's or image using an 8 bit row offset counter 0-120
	;Two memory Pointers one for the Frame Buffer, and One for Program Memory
	LDI R0 0x00
	OUT XH R0
	OUT XL R0
	;Initialize Program Memory pointer (Z) to point to the start of the Data Table containing the image.
	LDI R29 0x28
	OUT ZH R29
	OUT ZL R0
	;If phase one Disp phase 1
	CPI R30 0x00
	BRNE phase_two
	CALL DISP_PHASE_ONE
	JMP vblank_ret
:phase_two
	CALL DISP_PHASE_TWO
	;Else dsip phase 2
:vblank_ret
	INC R31 ;Increment the row offset counter by one to move the image 1 row every frame thus it takes 2 seconds for the image to go across the screen.
	CPI R31 0x78 ;If row offset is 120 we are in phase 2
	BRNE real_vblank_ret
	LDI R30 0xFF
:real_vblank_ret
	RETI

;This subroutine increments a 16-Bit pointer by 20. This effectively increments a row address by 1 for indexing program memory.
:INC_ROW_ADDR
	ADDI R16 0x14
	BRCC ret_inc_row_addr
	INC R17
:ret_inc_row_addr
	RET

;This subroutine increments a 16-bit pointer by 160, effectively offsetting a vga row aligned pointer by a row.
:INC_FB_ROW_ADDR
	ADDI R16 0xA0 ;Increment R16 by 160 the number of pixels in a row of the display output
	BRCC ret_inc_fb_row_addr
The traveling packet doesn't need to know net mask of subnet. Netmask is something that used on host itself, so it can calculate its subnet range. If the incoming packet's ip address will be in subnet range of current host, then it will accept it. Otherwise drop action will be aplied.

	INC R17
:ret_inc_fb_row_addr
	RET

:SET_MEMORY_POINTERS_FOR_IMAGE
	;Initialize R16 (low) and R17 (high) to point to the begining of the image in program memory.
	LDI R16 0x00
	LDI R17 0x28
	;Initialize loop cntr
	LDI R14 0x00
:prog_mem_ptr_loop
	CP R31 R14 ;Compare loop counter to row offset
	BREQ fb_ptr_begin
	CALL INC_ROW_ADDR
	INC R14
	JMP prog_mem_ptr_loop
:fb_ptr_begin
	;Set Program Memory Pointer
	OUT ZH R17
	OUT ZL R16
	;Initialize R16 (low) and R17 (high) to point to the begining of the image in the frame buffer.
	LDI R16 0x00
	LDI R17 0x00
	;initialize loop counter
	LDI R14 0x00
:fb_ptr_loop
	CP R31 R14 ;Compare loop counter to row offset
	BREQ ret_set_mem_ptrs
	CALL INC_FB_ROW_ADDR
	INC R14
	JMP fb_ptr_loop
:ret_set_mem_ptrs
	OUT XH R17 ;Set vga memory pointer
	OUT XL R16
	RET

:DISP_PHASE_ONE

:ret_disp_phase_one
	RET

:DISP_PHASE_TWO

:ret_disp_phase_two
	RET

;Write data at 0xA00, will be accessed at 0xA00 << 2 = 0x2800
.ORG 0x0A00
.DW 0x3870000
.DW 0x1
.DW 0xfe00010e
.DW 0x0
.DW 0x100
.DW 0x3870000
.DW 0x1
.DW 0xff00070e
.DW 0x0
.DW 0x700
.DW 0x3870000
.DW 0x1
.DW 0xc7000700
.DW 0x0
.DW 0x700
.DW 0x3870fc7
.DW 0x61d8e381
.DW 0xc7078fce
.DW 0x763c3b9c
.DW 0x1e1dcfc0
.DW 0x3ff1fe7
.DW 0xf1fc6301
.DW 0xfe0fcfce
.DW 0x7c7e3ffe
.DW 0x3f1fefc0
.DW 0x3ff1ce7
.DW 0x39ce7701
.DW 0xfc1ce70e
.DW 0x70e739ce
.DW 0x739ce700
.DW 0x38703e7
.DW 0x39ce7701
.DW 0xce1fe70e
.DW 0x70ff39ce
.DW 0x7f9ce700
.DW 0x3870fe7
.DW 0x39ce3601
.DW 0xce1fe70e
.DW 0x70ff39ce
.DW 0x7f9ce700
.DW 0x3871ce7
.DW 0x39ce3e01
.DW 0xc71c070e
.DW 0x70e039ce
.DW 0x701ce700
.DW 0x3871fe7
.DW 0xf1fc3e01
.DW 0xc70fe7ce
.DW 0x707f39ce
.DW 0x3f9ce7c0
.DW 0x3870ee7
.DW 0x61d81c01
.DW 0xc387c3ce
.DW 0x703e39ce
.DW 0x1f1ce3c0
.DW 0x7
.DW 0x1c01c00
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x7
.DW 0x1c0f800
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x7
.DW 0x1c0f800
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x1f
.DW 0xc00000f0
.DW 0x71c7000
.DW 0x40000000
.DW 0x0
.DW 0x1f
.DW 0xe00001f0
.DW 0x71c7001
.DW 0xc0000000
.DW 0x0
.DW 0x1c
.DW 0xe00001c0
.DW 0x33e6001
.DW 0xc0000000
.DW 0x0
.DW 0x1c
.DW 0xe3b1e3e0
.DW 0x3bee3f3
.DW 0xf1f07877
.DW 0x0
.DW 0x1c
.DW 0xe3e3f3e0
.DW 0x3b6e7fb
.DW 0xf398fc7f
.DW 0x80000000
.DW 0x1f
.DW 0xe38739c0
.DW 0x3f7e739
.DW 0xc381ce73
.DW 0x80000000
.DW 0x1f
.DW 0xc38739c0
.DW 0x3f7e0f9
.DW 0xc3f1ce73
.DW 0x80000000
.DW 0x1c
.DW 0x38739c0
.DW 0x1e3c3f9
.DW 0xc1f9ce73
.DW 0x80000000
.DW 0x1c
.DW 0x38739ce
.DW 0x1e3c739
.DW 0xc039ce73
.DW 0x9c000000
.DW 0x1c
.DW 0x383f1ce
.DW 0x1e3c7f9
.DW 0xf338fc73
.DW 0x9c000000
.DW 0x1c
.DW 0x381e1ce
.DW 0x1c1c3b8
.DW 0xf1f07873
.DW 0x9c000000
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0xc000000
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x18000000
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x10000000
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x7f0000
.DW 0x3c00ff0
.DW 0x39c000
.DW 0x0
.DW 0x0
.DW 0x7f8000
.DW 0x7c00ff8
.DW 0x39c000
.DW 0x0
.DW 0x0
.DW 0x738000
.DW 0x7000e38
.DW 0x39c000
.DW 0x0
.DW 0x0
.DW 0x738ec7
.DW 0x8f800e38
.DW 0x3c39c000
.DW 0x0
.DW 0x0
.DW 0x738f8f
.DW 0xcf800ff0
.DW 0x7e39c000
.DW 0x0
.DW 0x0
.DW 0x7f8e1c
.DW 0xe7000ff0
.DW 0xe739c000
.DW 0x0
.DW 0x0
.DW 0x7f0e1c
.DW 0xe7000e38
.DW 0xff39c000
.DW 0x0
.DW 0x0
.DW 0x700e1c
.DW 0xe7000e38
.DW 0xff39c000
.DW 0x0
.DW 0x0
.DW 0x700e1c
.DW 0xe7380e38
.DW 0xe039ce00
.DW 0x0
.DW 0x0
.DW 0x700e0f
.DW 0xc7380ff8
.DW 0x7f39ce00
.DW 0x0
.DW 0x0
.DW 0x700e07
.DW 0x87380ff0
.DW 0x3e39ce00
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x600
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0xc00
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x800
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x0
.DW 0x3e007f00
.DW 0x1f000
.DW 0x1
.DW 0xc0000000
.DW 0x0
.DW 0x7f007f80
.DW 0x3f800
.DW 0x1
.DW 0xc0000000
.DW 0x0
.DW 0x77007380
.DW 0x3bc00
.DW 0x1
.DW 0xc0000000
.DW 0x0
.DW 0x770071c7
.DW 0x6007183f
.DW 0xf87c1e1
.DW 0xc0000000
.DW 0x0
.DW 0x3e0071c7
.DW 0xc007007f
.DW 0x9cce63f1
.DW 0xc0000000
.DW 0x0
.DW 0x780071c7
.DW 0x70073
.DW 0x9c0e0739
.DW 0xc0000000
.DW 0x0
.DW 0xfdc071c7
.DW 0x7000f
.DW 0x9f8fc7f9
.DW 0xc0000000
.DW 0x1
.DW 0xcf8071c7
.DW 0x7183f
.DW 0x8fc7e7f9
.DW 0xc0000000
.DW 0x1
.DW 0xc7c073c7
.DW 0x1c03bc73
.DW 0x81c0e701
.DW 0xc0000000
.DW 0x1
.DW 0xffc07f87
.DW 0x1c03f87f
.DW 0x99cce3f9
.DW 0xc0000000
.DW 0x0
.DW 0xfcc07f07
.DW 0x1c01f03b
.DW 0x8f87c1f1
.DW 0xc0000000
