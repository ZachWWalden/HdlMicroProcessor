$date
	Sat Feb  5 04:13:22 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module register_file $end
$scope module in_dec $end
$var wire 1 ! clock $end
$var wire 16 " data_in [15:0] $end
$var wire 10 # wr_addr [9:0] $end
$var wire 2 $ wr_en [1:0] $end
$var wire 2 % wr_low [1:0] $end
$var wire 2 & wr_high [1:0] $end
$var wire 32 ' wen [31:0] $end
$var wire 256 ( data_out [255:0] $end
$var integer 32 ) i [31:0] $end
$upscope $end
$upscope $end
$scope module register_file $end
$var wire 1 ! clock $end
$var wire 16 * data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 10 , rd_addr [9:0] $end
$var wire 2 - rd_en [1:0] $end
$var wire 10 . wr_addr [9:0] $end
$var wire 2 / wr_en [1:0] $end
$var wire 256 0 write_data [255:0] $end
$var wire 32 1 wen [31:0] $end
$var wire 32 2 ren [31:0] $end
$var wire 256 3 read_data [255:0] $end
$var wire 16 4 data_out [15:0] $end
$scope begin genblk1[0] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 5 data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 6 ren [1:0] $end
$var wire 2 7 wen [1:0] $end
$var wire 16 8 data_out [15:0] $end
$var wire 16 9 data [15:0] $end
$var reg 2 : read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 ; data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 < write_enable $end
$var wire 8 = data_out [7:0] $end
$var reg 8 > value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 ? data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 @ write_enable $end
$var wire 8 A data_out [7:0] $end
$var reg 8 B value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[1] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 C data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 D ren [1:0] $end
$var wire 2 E wen [1:0] $end
$var wire 16 F data_out [15:0] $end
$var wire 16 G data [15:0] $end
$var reg 2 H read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 I data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 J write_enable $end
$var wire 8 K data_out [7:0] $end
$var reg 8 L value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 M data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 N write_enable $end
$var wire 8 O data_out [7:0] $end
$var reg 8 P value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[2] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 Q data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 R ren [1:0] $end
$var wire 2 S wen [1:0] $end
$var wire 16 T data_out [15:0] $end
$var wire 16 U data [15:0] $end
$var reg 2 V read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 W data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 X write_enable $end
$var wire 8 Y data_out [7:0] $end
$var reg 8 Z value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 [ data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 \ write_enable $end
$var wire 8 ] data_out [7:0] $end
$var reg 8 ^ value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[3] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 _ data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 ` ren [1:0] $end
$var wire 2 a wen [1:0] $end
$var wire 16 b data_out [15:0] $end
$var wire 16 c data [15:0] $end
$var reg 2 d read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 e data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 f write_enable $end
$var wire 8 g data_out [7:0] $end
$var reg 8 h value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 i data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 j write_enable $end
$var wire 8 k data_out [7:0] $end
$var reg 8 l value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[4] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 m data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 n ren [1:0] $end
$var wire 2 o wen [1:0] $end
$var wire 16 p data_out [15:0] $end
$var wire 16 q data [15:0] $end
$var reg 2 r read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 s data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 t write_enable $end
$var wire 8 u data_out [7:0] $end
$var reg 8 v value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 w data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 x write_enable $end
$var wire 8 y data_out [7:0] $end
$var reg 8 z value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[5] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 { data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 | ren [1:0] $end
$var wire 2 } wen [1:0] $end
$var wire 16 ~ data_out [15:0] $end
$var wire 16 !" data [15:0] $end
$var reg 2 "" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 #" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 $" write_enable $end
$var wire 8 %" data_out [7:0] $end
$var reg 8 &" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 '" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 (" write_enable $end
$var wire 8 )" data_out [7:0] $end
$var reg 8 *" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[6] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 +" data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 ," ren [1:0] $end
$var wire 2 -" wen [1:0] $end
$var wire 16 ." data_out [15:0] $end
$var wire 16 /" data [15:0] $end
$var reg 2 0" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 1" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 2" write_enable $end
$var wire 8 3" data_out [7:0] $end
$var reg 8 4" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 5" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 6" write_enable $end
$var wire 8 7" data_out [7:0] $end
$var reg 8 8" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[7] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 9" data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 :" ren [1:0] $end
$var wire 2 ;" wen [1:0] $end
$var wire 16 <" data_out [15:0] $end
$var wire 16 =" data [15:0] $end
$var reg 2 >" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 ?" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 @" write_enable $end
$var wire 8 A" data_out [7:0] $end
$var reg 8 B" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 C" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 D" write_enable $end
$var wire 8 E" data_out [7:0] $end
$var reg 8 F" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[8] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 G" data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 H" ren [1:0] $end
$var wire 2 I" wen [1:0] $end
$var wire 16 J" data_out [15:0] $end
$var wire 16 K" data [15:0] $end
$var reg 2 L" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 M" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 N" write_enable $end
$var wire 8 O" data_out [7:0] $end
$var reg 8 P" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 Q" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 R" write_enable $end
$var wire 8 S" data_out [7:0] $end
$var reg 8 T" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[9] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 U" data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 V" ren [1:0] $end
$var wire 2 W" wen [1:0] $end
$var wire 16 X" data_out [15:0] $end
$var wire 16 Y" data [15:0] $end
$var reg 2 Z" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 [" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 \" write_enable $end
$var wire 8 ]" data_out [7:0] $end
$var reg 8 ^" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 _" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 `" write_enable $end
$var wire 8 a" data_out [7:0] $end
$var reg 8 b" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[10] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 c" data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 d" ren [1:0] $end
$var wire 2 e" wen [1:0] $end
$var wire 16 f" data_out [15:0] $end
$var wire 16 g" data [15:0] $end
$var reg 2 h" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 i" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 j" write_enable $end
$var wire 8 k" data_out [7:0] $end
$var reg 8 l" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 m" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 n" write_enable $end
$var wire 8 o" data_out [7:0] $end
$var reg 8 p" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[11] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 q" data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 r" ren [1:0] $end
$var wire 2 s" wen [1:0] $end
$var wire 16 t" data_out [15:0] $end
$var wire 16 u" data [15:0] $end
$var reg 2 v" read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 w" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 x" write_enable $end
$var wire 8 y" data_out [7:0] $end
$var reg 8 z" value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 {" data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 |" write_enable $end
$var wire 8 }" data_out [7:0] $end
$var reg 8 ~" value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[12] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 !# data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 "# ren [1:0] $end
$var wire 2 ## wen [1:0] $end
$var wire 16 $# data_out [15:0] $end
$var wire 16 %# data [15:0] $end
$var reg 2 &# read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 '# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 (# write_enable $end
$var wire 8 )# data_out [7:0] $end
$var reg 8 *# value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 +# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 ,# write_enable $end
$var wire 8 -# data_out [7:0] $end
$var reg 8 .# value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[13] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 /# data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 0# ren [1:0] $end
$var wire 2 1# wen [1:0] $end
$var wire 16 2# data_out [15:0] $end
$var wire 16 3# data [15:0] $end
$var reg 2 4# read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 5# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 6# write_enable $end
$var wire 8 7# data_out [7:0] $end
$var reg 8 8# value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 9# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 :# write_enable $end
$var wire 8 ;# data_out [7:0] $end
$var reg 8 <# value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[14] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 =# data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 ># ren [1:0] $end
$var wire 2 ?# wen [1:0] $end
$var wire 16 @# data_out [15:0] $end
$var wire 16 A# data [15:0] $end
$var reg 2 B# read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 C# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 D# write_enable $end
$var wire 8 E# data_out [7:0] $end
$var reg 8 F# value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 G# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 H# write_enable $end
$var wire 8 I# data_out [7:0] $end
$var reg 8 J# value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin genblk1[15] $end
$scope module regs $end
$var wire 1 ! clock $end
$var wire 16 K# data_in [15:0] $end
$var wire 1 + nreset $end
$var wire 2 L# ren [1:0] $end
$var wire 2 M# wen [1:0] $end
$var wire 16 N# data_out [15:0] $end
$var wire 16 O# data [15:0] $end
$var reg 2 P# read_en [1:0] $end
$scope module reg0 $end
$var wire 1 ! clock $end
$var wire 8 Q# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 R# write_enable $end
$var wire 8 S# data_out [7:0] $end
$var reg 8 T# value [7:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! clock $end
$var wire 8 U# data_in [7:0] $end
$var wire 1 + nreset $end
$var wire 1 V# write_enable $end
$var wire 8 W# data_out [7:0] $end
$var reg 8 X# value [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module in_dec $end
$upscope $end
$scope module out_dec $end
$var wire 1 ! clock $end
$var wire 256 Y# data_in [255:0] $end
$var wire 16 Z# data_out [15:0] $end
$var wire 10 [# rd_addr [9:0] $end
$var wire 2 \# rd_en [1:0] $end
$var wire 32 ]# ren [31:0] $end
$var wire 2 ^# rd_low [1:0] $end
$var wire 2 _# rd_high [1:0] $end
$var reg 16 `# data_out_int [15:0] $end
$var integer 32 a# i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000 a#
b0 `#
bz _#
bz ^#
b0 ]#
bz \#
bz [#
b0 Z#
bz Y#
b0 X#
b0 W#
0V#
b0 U#
b0 T#
b0 S#
0R#
b0 Q#
b0 P#
b0 O#
bz N#
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
0H#
b0 G#
b0 F#
b0 E#
0D#
b0 C#
b0 B#
b0 A#
bz @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
0:#
b0 9#
b0 8#
b0 7#
06#
b0 5#
b0 4#
b0 3#
bz 2#
b0 1#
b0 0#
b0 /#
b0 .#
b0 -#
0,#
b0 +#
b0 *#
b0 )#
0(#
b0 '#
b0 &#
b0 %#
bz $#
b0 ##
b0 "#
b0 !#
b0 ~"
b0 }"
0|"
b0 {"
b0 z"
b0 y"
0x"
b0 w"
b0 v"
b0 u"
bz t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
0n"
b0 m"
b0 l"
b0 k"
0j"
b0 i"
b0 h"
b0 g"
bz f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
0`"
b0 _"
b0 ^"
b0 ]"
0\"
b0 ["
b0 Z"
b0 Y"
bz X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
0R"
b0 Q"
b0 P"
b0 O"
0N"
b0 M"
b0 L"
b0 K"
bz J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
0D"
b0 C"
b0 B"
b0 A"
0@"
b0 ?"
b0 >"
b0 ="
bz <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
06"
b0 5"
b0 4"
b0 3"
02"
b0 1"
b0 0"
b0 /"
bz ."
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
0("
b0 '"
b0 &"
b0 %"
0$"
b0 #"
b0 ""
b0 !"
bz ~
b0 }
b0 |
b0 {
b0 z
b0 y
0x
b0 w
b0 v
b0 u
0t
b0 s
b0 r
b0 q
bz p
b0 o
b0 n
b0 m
b0 l
b0 k
0j
b0 i
b0 h
b0 g
0f
b0 e
b0 d
b0 c
bz b
b0 a
b0 `
b0 _
b0 ^
b0 ]
0\
b0 [
b0 Z
b0 Y
0X
b0 W
b0 V
b0 U
bz T
b0 S
b0 R
b0 Q
b0 P
b0 O
0N
b0 M
b0 L
b0 K
0J
b0 I
b0 H
b0 G
bz F
b0 E
b0 D
b0 C
b0 B
b0 A
0@
b0 ?
b0 >
b0 =
0<
b0 ;
b0 :
b0 9
bz 8
b0 7
b0 6
b0 5
b0 4
bz 3
b0 2
b0 1
b0 0
bz /
bz .
bz -
bz ,
z+
bz *
b10000 )
b0 (
b0 '
bz &
bz %
bz $
bz #
bz "
1!
$end
#5000
0!
#5001
